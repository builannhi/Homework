function findBMI(w, h) {
  let BMI = w / h ** 2;
  if (BMI <= 16) {
    console.log("G·∫ßy ƒë·ªô III");
  } else if (BMI > 16 && BMI <= 17.5) {
    console.log("G·∫ßy ƒë·ªô II");
  } else if (BMI > 17.5 && BMI <= 18.5) {
    console.log("G·∫ßy ƒë·ªô I");
  } else if (BMI > 18.5 && BMI <= 25) {
    console.log("B√¨nh th∆∞·ªùng");
  } else if (BMI > 25 && BMI <= 30) {
    console.log("H∆°i b√©o");
  } else if (BMI > 30 && BMI <= 35) {
    console.log("B√©o ph√¨ ƒë·ªô I");
  } else if (BMI > 35 && BMI <= 40) {
    console.log("B√©o ph√¨ ƒë·ªô II");
  } else if (BMI > 40 && BMI <= 45) {
    console.log("B√©o ph√¨ ƒë·ªô III");
  }
}

findBMI(61, 1.62);

//5. Vi·∫øt h√†m `maxOfThree(a, b, c)` nh·∫≠n ba gi√° tr·ªã ƒë·∫ßu v√†o `a`, `b`, `c` l√† 3 s·ªë b·∫•t k·ª≥. 
// Ki·ªÉm tra v√† in ra k·∫øt qu·∫£ s·ªë l·ªõn nh·∫•t trong 3 s·ªë(l∆∞u √Ω tr∆∞·ªùng h·ª£p c√°c s·ªë c√≥ gi√° tr·ªã b·∫±ng nhau)

function findMaxOfThree(a, b, c) {
  if (a >= b && a >= c) {
    console.log(`s·ªë l·ªõn nh·∫•t l√† ${a}`);
  } else if (b >= a && b >= c) {
    console.log(`s·ªë l·ªõn nh·∫•t l√† ${b}`);
  } else if (c >= a && c >= b) {
    console.log(`s·ªë l·ªõn nh·∫•t l√† ${c}`);
  }
}

findMaxOfThree(5, 8, 2);
findMaxOfThree(10, 8, 2);

function calcWaterBill(m3) {
  let price;
  if (m3 <= 5) {
    price = 45000;
  } else if (m3 <= 10) {
    price = m3 * 9000;
  } else if (m3 <= 20) {
    price = 90000 + (m3 - 10) * 11000;
  } else if (m3 <= 30) {
    price = 90000 + 110000 + (m3 - 20) * 13000;
  } else {
    price = 90000 + 110000 + 130000 + (m3 - 30) * 15000;
  }
  console.log(`S·ª≠ d·ª•ng ${m3}m3 n∆∞·ªõc c·∫ßn thanh to√°n ${price} VND`);
}

calcWaterBill(23);
calcWaterBill(4);
calcWaterBill(12);
calcWaterBill(35);

function calcElectricBill(kw) {
  let ePrice;
  if (kw <= 50) {
    ePrice = 1500 * kw;
  } else if (kw <= 100) {
    ePrice = 1500 * 50 + (kw - 50) * 2000;
  } else if (kw <= 200) {
    ePrice = 1500 * 50 + 2000 * 50 + (kw - 100) * 2500;
  } else if (kw <= 400) {
    ePrice = 1500 * 50 + 2000 * 50 + 2500 * 100 + (kw - 200) * 3000;
  } else {
    ePrice =
      1500 * 50 + 2000 * 50 + 2500 * 100 + 3000 * 200 + (kw - 400) * 4000;
  }
  console.log(`S·ª≠ d·ª•ng ${kw}kw ƒëi·ªán ph·∫£i tr·∫£ ${ePrice} VND`);
}

calcElectricBill(346);
calcElectricBill(50);
calcElectricBill(401);

// 4. Vi·∫øt h√†m `calcTaxiFee(km)` nh·∫≠n m·ªôt gi√° tr·ªã ƒë·∫ßu v√†o `km` l√† s·ªë km ƒë√£ ƒëi, t√≠nh v√† **tr·∫£ v·ªÅ k·∫øt qu·∫£** l√† s·ªë ti·ªÅn ph·∫£i tr·∫£ cho kh√°ch ƒëi taxi theo s·ªë kilomet (km) ƒë√£ di chuy·ªÉn. Quy ƒë·ªãnh nh∆∞ sau:

    // - Ph√≠ m·ªü c·ª≠a 10.000
    // - Gi√° cho 30km ƒë·∫ßu ti√™n l√† 11.000ƒë/km
    // - Gi√° cho km th·ª© 31 tr·ªü ƒëi l√† 9.500ƒë/km
    // - T·ªïng ti·ªÅn = Ph√≠ m·ªü c·ª≠a + T·ªïng ti·ªÅn tr√™n s·ªë km

function calcTaxiFee(km) {
  let p;
  let openFee = 10000;
  if (km <= 30) {
    p = openFee + 11000 * km;
  } else {
    p = openFee + 11000 * 30 + (km - 30) * 9500;
  }
  console.log(`Ph√≠ taxi sau ${km}km l√† ${p} VND`);
}

calcTaxiFee(15);
calcTaxiFee(35);

// 3. Vi·∫øt h√†m `calcGrade(point)` nh·∫≠n m·ªôt gi√° tr·ªã ƒë·∫ßu v√†o `point` l√† ƒëi·ªÉm trung b√¨nh c·ªßa sinh vi√™n, ki·ªÉm tra v√† **tr·∫£ v·ªÅ k·∫øt qu·∫£** x·∫øp lo·∫°i t·ªët nghi·ªáp c·ªßa sinh vi√™n theo s·ªë ƒëi·ªÉm trung b√¨nh (point). Quy ƒë·ªãnh nh∆∞ sau:

    // - $ point < 4.0 $: X·∫øp lo·∫°i F
    // - $ 4.0 \le point < 5.5 $: X·∫øp lo·∫°i D
    // - $ 5.5 \le point < 7.0 $: X·∫øp lo·∫°i C
    // - $ 7.0 \le point < 8.5 $: X·∫øp lo·∫°i B
    // - $ point \ge 8.5$: X·∫øp lo·∫°i A


function calcGrade(point) {
  if (point < 4.0) {
    console.log(`X·∫øp lo·∫°i F`);
  } else if (point < 5.5) {
    console.log(`X·∫øp lo·∫°i D`);
  } else if (point < 7.0) {
    console.log(`X·∫øp lo·∫°i C`);
  } else if (point < 8.5) {
    console.log(`X·∫øp lo·∫°i B`);
  } else {
    console.log(`X·∫øp lo·∫°i A`);
  }
}

calcGrade(3.4);
calcGrade(5.9);
calcGrade(9.1);

// let password = "techmaster";
// let typePassword = prompt("Nh·∫≠p m·∫≠t kh·∫©u");

// while (typePassword != password) {
//   typePassword = prompt("Sai m·∫≠t kh·∫©u, m·ªùi nh·∫≠p l·∫°i m·∫≠t kh·∫©u");
// }

for (let i = 1; i <= 100; i++) {
  if (i % 2 == 0) {
    console.log(i);
  }
}

let total = 0;

for (let index = 1; index <= 100; index++) {
  if (index % 2 == 0) {
    total = total + index;
  }
}

console.log(`T·ªïng c√°c s·ªë ch·∫µn trong d√£y t·ª´ 1 ƒë·∫øn 100 l√† ${total}`);

// 2. Vi·∫øt ch∆∞∆°ng tr√¨nh l·∫∑p gi√° tr·ªã i t·ª´ 1 ƒë·∫øn 10, v·ªõi m·ªói gi√° tr·ªã i, ki·ªÉm tra xem:
// - N·∫øu i chia h·∫øt cho 3 th√¨ in ra console ‚ÄúFizz‚Äù
// - N·∫øu i chia h·∫øt cho 5 th√¨ in ra console ‚ÄúBuzz‚Äù
// - N·∫øu i chia h·∫øt cho c·∫£ 3 v√† 5 th√¨ in ra ‚ÄúFizzBuzz‚Äù

for (let i = 1; i <= 100; i++) {
  if (i % 15 == 0) {
    console.log(`FizzBuzz`);
  } else if (i % 3 == 0) {
    console.log(`Fizz`);
  } else if (i % 5 == 0) {
    console.log(`Buzz`);
  }
}

// // 1. Vi·∫øt ch∆∞∆°ng tr√¨nh l·∫∑p gi√° tr·ªã i t·ª´ 1 ƒë·∫øn 10, v·ªõi m·ªói gi√° tr·ªã i, ki·ªÉm tra xem n√≥ l√† ch·∫µn hay l·∫ª v√† in ra console

for (i = 1; i <= 10; i++) {
  if (i % 2 == 0) console.log(`${i} l√† s·ªë ch·∫µn`);
  else console.log(`${i} l√† s·ªë l·∫ª`);
}

// 3. Vi·∫øt ch∆∞∆°ng tr√¨nh ki·ªÉm tra xem m·ªôt s·ªë nguy√™n d∆∞∆°ng n c√≥ ph·∫£i s·ªë nguy√™n t·ªë hay kh√¥ng
// Bi·∫øt s·ªë nguy√™n t·ªë l√† s·ªë ch·ªâ chia h·∫øt cho ch√≠nh n√≥ v√† 1

function isPrime(n) {
  if (n < 2) return false;

  for (i = 2; i < n; i++) {
    if (n % i === 0) return false;
  }
  return true;
}

console.log(isPrime(3));
console.log(isPrime(4));
console.log(isPrime(10));

// 4. Vi·∫øt ch∆∞∆°ng tr√¨nh in ra ch·ªØ s·ªë ƒë·∫ßu v√† cu·ªëi c·ªßa m·ªôt s·ªë n (VD: 12345 -> 15)

function firstAndLastNum(m) {
  for (i = 0; i <= m; i++) {
    let k = 10 ** (i - 1);
    let result = ((m - (m % k)) / k) * 10 + (m % 10);
    if (m < 10 ** i) return result;
  }
}

console.log(firstAndLastNum(2367));
console.log(firstAndLastNum(7));
console.log(firstAndLastNum(1000));

// 1. Vi·∫øt h√†m `isOddNumber(number)` nh·∫≠n m·ªôt gi√° tr·ªã ƒë·∫ßu v√†o `number` l√† m·ªôt s·ªë
//  nguy√™n b·∫•t k·ª≥, ki·ªÉm tra v√† tr·∫£ v·ªÅ k·∫øt qu·∫£ s·ªë ƒë√≥ c√≥ ph·∫£i l√† s·ªë l·∫ª(`true`) hay kh√¥ng(`false`)

function isOddNumber(number) {
  if (number % 2 == 0) return false;
  else return true;
}

console.log(isOddNumber(12));
console.log(isOddNumber(23));

// 2. Vi·∫øt h√†m `maxOfTwo(a, b)` nh·∫≠n hai gi√° tr·ªã ƒë·∫ßu v√†o `a`, `b` l√† 2 s·ªë b·∫•t k·ª≥, ki·ªÉm tra v√† tr·∫£ v·ªÅ s·ªë l·ªõn h∆°n

function maxOfTwo(a, b) {
  if (a > b) return a;
  else if (a < b) return b;
}

console.log(maxOfTwo(1, 2));
console.log(maxOfTwo(2, 2));

//3. Vi·∫øt h√†m `divisibleByThreeAndFive(number)` nh·∫≠n m·ªôt gi√° tr·ªã ƒë·∫ßu v√†o `number` l√† m·ªôt s·ªë nguy√™n b·∫•t k·ª≥, ki·ªÉm tra v√† **tr·∫£ v·ªÅ k·∫øt qu·∫£**
// cho bi·∫øt s·ªë ƒë√≥ c√≥ chia h·∫øt cho c·∫£ `3` v√†`5`(`true`) hay kh√¥ng(`false`)

function divisibleByThreeAndFive(number) {
  if (number % 15 == 0) return true;
  else return false;
}

console.log(divisibleByThreeAndFive(30));
console.log(divisibleByThreeAndFive(56));

// 4. Vi·∫øt h√†m `season(month)` nh·∫≠n m·ªôt gi√° tr·ªã ƒë·∫ßu v√†o `month` l√† m·ªôt th√°ng trong nƒÉm (number), ki·ªÉm tra v√† in ra m√πa t∆∞∆°ng ·ª©ng v·ªõi th√°ng ƒë√≥:

// - Winter (12, 1, 2)
// - Spring (3, 4, 5)
// - Summer (6, 7, 8)
// - Fall (9, 10, 11)

function season(month) {
  if (month >= 3 && month <= 5) return "Spring";
  else if (month >= 6 && month <= 8) return "Summer";
  else if (month >= 9 && month <= 11) return "Fall";
  else if ((month >= 1 && month <= 2) || month == 12) return "Winter";
}

console.log(season(12));
console.log(season(5));

//Vi·∫øt h√†m `trafficLight(light)` nh·∫≠n m·ªôt gi√° tr·ªã ƒë·∫ßu v√†o `light` l√† t√≠n hi·ªáu ƒë√®n giao th√¥ng (`Red`, `Yellow`, `Green`),
//in ra th√¥ng b√°o t∆∞∆°ng ·ª©ng v·ªõi t√≠n hi·ªáu ƒë√®n:

// - `Green`: ƒê∆∞·ª£c ph√©p di chuy·ªÉn
// - `Yellow`: Gi·∫£m t·ªëc ƒë·ªô v√† d·ª´ng l·∫°i
// - `Red`: D·ª´ng l·∫°i

function trafficLight(light) {
  if (light == "green") return "ƒê∆∞·ª£c ph√©p di chuy·ªÉn";
  else if (light == "yellow") return "Gi·∫£m t·ªëc ƒë·ªô v√† d·ª´ng l·∫°i";
  else if (light == "red") return "D·ª´ng l·∫°i";
}

console.log(trafficLight("green"));
console.log(trafficLight("red"));
console.log(trafficLight("yellow"));

// 6. Vi·∫øt h√†m `calcCommissions(totalSales)` nh·∫≠n m·ªôt gi√° tr·ªã ƒë·∫ßu v√†o `totalSales` l√† t·ªïng doanh s·ªë b√°n h√†ng c·ªßa m·ªôt ƒë·∫°i l√Ω, ki·ªÉm tra v√† **tr·∫£ v·ªÅ k·∫øt qu·∫£** l√† ti·ªÅn hoa h·ªìng m√† ƒë·∫°i l√Ω nh·∫≠n ƒë∆∞·ª£c quy ƒë·ªãnh nh∆∞ sau:

//     - N·∫øu $totalSales \le 100 tri·ªáu$ th√¨ hoa h·ªìng nh·∫≠n ƒë∆∞·ª£c l√† $5\%$
//     - N·∫øu $100 tri·ªáu \lt totalSales \le 300 tri·ªáu$ th√¨ hoa h·ªìng l√† $10\%$
//     - N·∫øu $totalSales \gt 300 tri·ªáu$ th√¨ hoa h·ªìng l√† $20\%$



// 1. Vi·∫øt h√†m `isLeafYear(year)` nh·∫≠n m·ªôt gi√° tr·ªã ƒë·∫ßu v√†o `year` l√† m·ªôt nƒÉm b·∫•t k·ª≥, ki·ªÉm tra v√† tr·∫£ v·ªÅ k·∫øt qu·∫£ nƒÉm ƒë√≥ c√≥ ph·∫£i l√† nƒÉm nhu·∫≠n (`true`) hay kh√¥ng (`false`)

//     üí° T√≠nh theo l·ªãch [Gregory](https://vi.wikipedia.org/wiki/N%C4%83m_nhu%E1%BA%ADn#:~:text=m%C3%A3%20ngu%E1%BB%93n%5D-,L%E1%BB%8Bch%20Gregorius,-%5Bs%E1%BB%ADa%20%7C)

function isLeafYear(year) {
  if (
    (year % 4 === 0 && year % 100 !== 0 && year % 400 !== 0) ||
    (year % 100 === 0 && year % 400 === 0)
  ) {
    return true;
  } else {
    return false;
  }
}

console.log(isLeafYear(1978));
console.log(isLeafYear(2020));


//2. Vi·∫øt h√†m `daysOfMonth(month)` nh·∫≠n m·ªôt gi√° tr·ªã ƒë·∫ßu v√†o `month`, tr·∫£ v·ªÅ s·ªë ng√†y c·ªßa th√°ng ƒë√≥:

    // - C√°c th√°ng 1, 3, 5, 7, 8, 10, 12 c√≥ 31 ng√†y
    // - C√°c th√°ng 4, 6, 9, 11 c√≥ 30 ng√†y
    // - Th√°ng 2 c√≥ 29 ng√†y n·∫øu l√† nƒÉm nhu·∫≠n, n·∫øu kh√¥ng l√† 28 ng√†y

function daysOfMonth(month, year){
  
  if (month === 2) {
    if (
      (year % 4 === 0 && year % 100 !== 0 && year % 400 !== 0) ||
      (year % 100 === 0 && year % 400 === 0)
    ) {
      return 29;
    } else {
      return 28;
    };

  } else if (month === 4 || month === 6 || month === 9 || month === 11) {
    return 30;

  } else return 31;
}
  
console.log(daysOfMonth(2, 2020));
console.log(daysOfMonth(2, 1978));
console.log(daysOfMonth(12, 2022));

// 6. Vi·∫øt h√†m `solveEquation(a, b, c)` nh·∫≠n ba gi√° tr·ªã ƒë·∫ßu v√†o `a`, `b`, `c` t∆∞∆°ng ·ª©ng l√† 3 tham s·ªë c·ªßa ph∆∞∆°ng tr√¨nh b·∫≠c 2 $ax^2 + bx + c$ = 0, t√¨m v√† tr·∫£ v·ªÅ nghi·ªám c·ªßa ph∆∞∆°ng tr√¨nh:

//     - N·∫øu $a = 0$ v√† $b = 0$ th√¨ ph∆∞∆°ng tr√¨nh v√¥ nghi·ªám (tr·∫£ v·ªÅ `null`)
//     - N·∫øu $a = 0$ th√¨ ph∆∞∆°ng tr√¨nh c√≥ m·ªôt nghi·ªám $$ -b \over a $$
//     - N·∫øu $a \ne 0$ th√¨ t√≠nh $delta = b^2 - 4ac$
//         - N·∫øu $delta \lt 0$ th√¨ ph∆∞∆°ng tr√¨nh v√¥ nghi·ªám (tr·∫£ v·ªÅ `null`)
//         - N·∫øu $delta \ge 0$ th√¨ ph∆∞∆°ng tr√¨nh c√≥ 2 nghi·ªám: $$ x = {-b \pm \sqrt{b^2-4ac} \over 2a} $$
//     - L∆∞u √Ω k·∫øt qu·∫£ tr·∫£ v·ªÅ n·∫øu c√≥ nghi·ªám l√† m·ªôt m·∫£ng ch·ª©a c√°c nghi·ªám c·ªßa ph∆∞∆°ng tr√¨nh, c√∫ ph√°p `[x1, x2]`

function solveEquation(a, b, c) {
  if (a == 0 && b == 0) return null;
  else if (a == 0 && b !== 0) return [-b / c];
  else if (a !== 0) {
    let delta = b ** 2 - 4 * a * c;
    let x1 = (-b + Math.sqrt(delta)) / (2 * a);
    let x2 = (-b - Math.sqrt(delta)) / (2 * a);
    if (delta == 0) return [-b / 2 * a];
    else if (delta > 0) return [x1, x2];
    else return null;
  }
}

console.log(solveEquation(1, 2, 1));
console.log(solveEquation(1, -3, -10));